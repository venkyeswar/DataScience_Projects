{"trial_id": "00", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 2, "max_value": 20, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_0", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_1", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.1, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001], "ordered": true}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_3", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_4", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_5", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_6", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_7", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_8", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_9", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_10", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_11", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_12", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_13", "default": null, "conditions": [], "min_value": 3, "max_value": 512, "step": 20, "sampling": "linear"}}], "values": {"num_layers": 14, "units_0": 483, "units_1": 183, "learning_rate": 0.001, "units_2": 3, "units_3": 3, "units_4": 3, "units_5": 3, "units_6": 3, "units_7": 3, "units_8": 3, "units_9": 3, "units_10": 3, "units_11": 3, "units_12": 3, "units_13": 3}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\venky\\anaconda3\\Lib\\site-packages\\keras\\src\\backend\\tensorflow\\nn.py\", line 587, in categorical_crossentropy\n    raise ValueError(\nValueError: Arguments `target` and `output` must have the same shape. Received: target.shape=(None, 1), output.shape=(None, 3)\n"}